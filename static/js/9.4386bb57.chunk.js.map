{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","colors","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useApprove","lpContract","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","pid","txHash","console","info","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","isActive","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","href","to","buttonColor","background","ButtonChild","target","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","getBalanceNumber","memo","YoloSwag0","YoloSwag","PoolFinishedSash","StyledCardActions","StyledActionSpacer","StyledDetails","RainbowLight","keyframes","StyledCardAccent","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","border","display","alignItems","justifyContent","width","src","height","alt","HarvestButton","UnlockButton","flex","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.4386bb57.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: #abc12300;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            Deposit Fee: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n  text-align: center;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: #100000;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 2px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? `#123456` : `#3a3a3a`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from \"bignumber.js\";\nimport React, { useCallback, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Button, IconButton, useModal, AddIcon, Image } from \"@pancakeswap-libs/uikit\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport UnlockButton from \"components/UnlockButton\";\nimport Label from \"components/Label\";\nimport { useERC20 } from \"hooks/useContract\";\nimport { useSousApprove } from \"hooks/useApprove\";\nimport useI18n from \"hooks/useI18n\";\nimport { useSousStake } from \"hooks/useStake\";\nimport { useSousUnstake } from \"hooks/useUnstake\";\nimport useBlock from \"hooks/useBlock\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useSousHarvest } from \"hooks/useHarvest\";\nimport Balance from \"components/Balance\";\nimport { PoolCategory } from \"config/constants/types\";\nimport { Pool } from \"state/types\";\nimport DepositModal from \"./DepositModal\";\nimport WithdrawModal from \"./WithdrawModal\";\nimport CompoundModal from \"./CompoundModal\";\nimport CardTitle from \"./CardTitle\";\nimport Card from \"./Card\";\nimport HarvestButton from \"./HarvestButton\";\nimport CardFooter from \"./CardFooter\";\n\nconst YoloSwag0 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  div:first-child  {\n    font-size: 16px;\n  }\n\n  div:nth-child(2) {\n    color: #EAE2FC;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 1;\n    margin-bottom: 12px;\n  }\n`;\n\nconst YoloSwag = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst PoolFinishedSash = styled.div`\n  background-image: url(\"/images/pool-finished-sash.svg\");\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`;\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n    rgba(255, 0, 0, 1)      0%,\n    rgba(255, 154, 0, 1)   10%,\n    rgba(197, 20, 20, 1)   20%,\n    rgba(214, 49, 49, 1)   30%,\n    rgba(218, 49, 49, 1)   40%,\n    rgba(214, 191, 27, 1)  50%,\n    rgba(222, 59, 59, 1)   60%,\n    rgba(234, 55, 55, 1)   70%,\n    rgba(208, 62, 62, 1)   80%,\n    rgba(216, 123, 28, 1)  90%,\n    rgba(220, 186, 63, 1) 100%);\n\n  background-size: 300% 300%;\n  border-radius: 0;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n  animation: ${RainbowLight} 2s linear infinite;\n`\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool;\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(stakingTokenAddress);\n  const { account } = useWallet();\n  const block = useBlock();\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId);\n  const { onStake } = useSousStake(sousId, isBnbPool);\n  const { onUnstake } = useSousUnstake(sousId);\n  const { onReward } = useSousHarvest(sousId, isBnbPool);\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber(userData?.allowance || 0);\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0);\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0);\n  const earnings = new BigNumber(userData?.pendingReward || 0);\n  const blocksUntilStart = Math.max(startBlock - block, 0);\n  const blocksRemaining = Math.max(endBlock - block, 0);\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals));\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  );\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  );\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  );\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove();\n\n      if (!txHash) { // The user either rejected the transaction or it failed\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n\n  return (\n    <Card\n      isActive={isCardActive}\n      isFinished={isFinished && sousId !== 0}\n      style={{border: (pool.sousId === 0 ? \"0\" : \"1px solid #ff9372\")}}\n    >\n\n      {pool.sousId === 0 && <StyledCardAccent />}\n\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: \"24px\" }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {tokenName} Pool\n        </CardTitle>\n\n        <div style={{ marginBottom: \"8px\", display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n        </div>\n\n        <YoloSwag0>\n            <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n        </YoloSwag0>\n\n        <YoloSwag>\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? \"Collecting\" : \"Harvest\"}\n              onClick={async () => {\n                setPendingTx(true);\n                await onReward();\n                setPendingTx(false);\n              }}\n            />\n          )}\n\n          {sousId === 0 && account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? \"Compounding\" : \"Compound\"}\n              onClick={onPresentCompound}\n            />\n          )}\n        </YoloSwag>\n\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={onPresentWithdraw}\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n          ))}\n        </StyledCardActions>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>APR:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            \"-\"\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            Your Stake:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  );\n};\n\nexport default PoolCard;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React from \"react\";\nimport { Route, useRouteMatch } from \"react-router-dom\";\nimport BigNumber from \"bignumber.js\";\nimport styled from \"styled-components\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport { BLOCKS_PER_YEAR } from \"config\";\nimport orderBy from \"lodash/orderBy\";\nimport partition from \"lodash/partition\";\nimport useBlock from \"hooks/useBlock\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useFarms, usePriceBnbBusd, usePools } from \"state/hooks\";\nimport { PoolCategory } from \"config/constants/types\";\nimport FlexLayout from \"components/layout/Flex\";\nimport Page from \"components/layout/Page\";\nimport PoolCard from \"./components/PoolCard\";\nimport PoolTabButtons from \"./components/PoolTabButtons\";\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/beast-banner.png');\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: contain;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  min-height: 116px;\n  text-align: center;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    height: 116px;\n    width: 100%;\n    color: #ffffff;\n    font-size: 20px;\n    text-align: left;\n    text-shadow:\n     -1px -1px 0 #000,\n      1px -1px 0 #000,\n      -1px 1px 0 #000,\n       1px 1px 0 #000;\n\n    div:nth-child(1) {\n      margin-bottom: 8px;\n      font-size: 32px;\n    }\n\n    div:not(:nth-child(1)) {\n      flex-shrink: 99;\n    }\n  }\n`;\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: string): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === \"BNB\") {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === \"BUSD\") {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <div>BEAST Pools</div>\n          <div>Stake various tokens to earn BEAST</div>\n          <div>You may unstake at any time</div>\n        </div>\n      </Hero>\n\n      <PoolTabButtons />\n\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, [\"sortOrder\"]).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, [\"sortOrder\"]).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n};\n\nexport default Farm;\n"],"sourceRoot":""}