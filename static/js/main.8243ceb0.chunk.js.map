{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/actions.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","utils/multicall.ts","contexts/BlockContext.tsx","utils/addressHelpers.ts","config/constants/types.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","App.tsx","contexts/ToastsContext/Provider.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","contexts/Localisation/translationsContext.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","eggPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","fetchPoolsPublicDataAsync","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceCakeBusd","bnbBusd","multipliedBy","useTotalValue","bnbPrice","cakePrice","value","i","length","val","plus","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","Container","styled","theme","mediaQueries","sm","Page","lg","masterChef","56","97","beast","wbnb","busd","tusd","usdt","usdc","btcb","dai","eth","ltc","pcs_cake","link","mulltiCall","lottery","lotteryNFT","abi","web3","getWeb3","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","PoolCategory","MASTER_CHEF","TOKEN_PER_BLOCK","sousId","sortOrder","stakingTokenName","stakingTokenAddress","tokenName","contractAddress","projectLink","poolCategory","CORE","tokenPerBlock","harvest","isFinished","fetchPoolsTotalStaking","nonBnbPools","poolsConfig","filter","p","bnbPool","callsNonBnbPools","poolConfig","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingEgg","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","totalStakings","liveData","totalStaking","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","lpSymbol","contracts","risk","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","console","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","useTheme","StyledThemeCopntext","config","label","icon","href","openHrefInNewTab","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","onDismiss","TranslateString","title","src","alt","style","height","marginBottom","size","color","as","NftGlobalNotification","useModal","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","document","location","Home","lazy","Farms","Pools","Referrals","Products","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","component","memo","ToastsContext","undefined","ToastsProvider","toasts","setToasts","toast","useCallback","description","type","prevToasts","id","kebabCase","currentToasts","prevToast","clear","remove","toastError","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","getRpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","defaultTranslationState"],"mappings":"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","file":"static/js/main.8243ceb0.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === \"BUSD\" && farmConfig.quoteTokenSymbol === \"BUSD\"){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, eggPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'eggPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        eggPerBlock: new BigNumber(eggPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import BigNumber from 'bignumber.js'\nimport { useEffect, /* useMemo */ } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2; // BNB-BUSD on PancakeSwap\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const bnbBusd = usePriceBnbBusd();\n  const farm = useFarmFromPid(1); // BEAST-BNB LP\n\n  if (bnbBusd.toNumber()) {\n    return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote).multipliedBy(bnbBusd.toNumber()) : ZERO;\n  }\n\n  return ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === \"BNB\") {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === \"CAKE\") {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  masterChef: {\n    56: '0x9faA7B66461C9C88FE4fbc25Ad619BE26d44af4e',\n    97: '',\n  },\n  beast: {\n    // https://beastmode.finance/\n    56: '0xA711Ff9c444261132818CdCB06cE44Be5a600A29',\n    97: '',\n  },\n  wbnb: {\n    // https://www.binance.org/\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  busd: {\n    // https://www.paxos.com/busd/\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '',\n  },\n  tusd: {\n    // https://www.trueusd.com/\n    56: '0x14016E85a25aeb13065688cAFB43044C2ef86784'\n  },\n  usdt: {\n    // https://tether.to/\n    56: '0x55d398326f99059fF775485246999027B3197955'\n  },\n  usdc: {\n    // https://www.centre.io/\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d'\n  },\n  btcb: {\n    // https://info.binance.com/en/currencies/bitcoin-bep2\n    56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c'\n  },\n  dai: {\n    // https://makerdao.com/\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3'\n  },\n  eth: {\n    // https://ethereum.org/\n    56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8'\n  },\n  ltc: {\n    // https://litecoin.org/\n    56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94'\n  },\n  pcs_cake: {\n    // https://pancakeswap.finance/\n    56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82'\n  },\n  link: {\n    // https://chain.link/\n    56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD'\n  },\n  // TODO: {\n  //   // WEBSITE\n  //   56: '0x0000000000000000000000000000000000000000'\n  // },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.beast[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: string\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: string\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { PoolConfig, PoolCategory } from \"./types\";\n\nconst MASTER_CHEF = \"0x9faA7B66461C9C88FE4fbc25Ad619BE26d44af4e\";\nconst TOKEN_PER_BLOCK = \"100\";\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    sortOrder: 1,\n    stakingTokenName: \"BEAST\",\n    stakingTokenAddress: \"0xA711Ff9c444261132818CdCB06cE44Be5a600A29\",\n    tokenName: \"BEAST\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://beastmode.finance/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 18,\n    sortOrder: 1,\n    stakingTokenName: \"WBNB\",\n    stakingTokenAddress: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    tokenName: \"WBNB\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.binance.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 19,\n    sortOrder: 2,\n    stakingTokenName: \"BUSD\",\n    stakingTokenAddress: \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\n    tokenName: \"BUSD\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.paxos.com/busd/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 20,\n    sortOrder: 2,\n    stakingTokenName: \"TUSD\",\n    stakingTokenAddress: \"0x14016E85a25aeb13065688cAFB43044C2ef86784\",\n    tokenName: \"TUSD\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.trueusd.com/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 21,\n    sortOrder: 2,\n    stakingTokenName: \"USDT\",\n    stakingTokenAddress: \"0x55d398326f99059fF775485246999027B3197955\",\n    tokenName: \"USDT\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://tether.to/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 22,\n    sortOrder: 2,\n    stakingTokenName: \"USDC\",\n    stakingTokenAddress: \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\",\n    tokenName: \"USDC\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://www.centre.io/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 23,\n    sortOrder: 2,\n    stakingTokenName: \"BTCB\",\n    stakingTokenAddress: \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\",\n    tokenName: \"BTCB\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://info.binance.com/en/currencies/bitcoin-bep2\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 24,\n    sortOrder: 2,\n    stakingTokenName: \"DAI\",\n    stakingTokenAddress: \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\n    tokenName: \"DAI\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://makerdao.com/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 25,\n    sortOrder: 2,\n    stakingTokenName: \"ETH\",\n    stakingTokenAddress: \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\n    tokenName: \"ETH\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://ethereum.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 26,\n    sortOrder: 2,\n    stakingTokenName: \"LTC\",\n    stakingTokenAddress: \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\",\n    tokenName: \"LTC\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://litecoin.org/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 27,\n    sortOrder: 2,\n    stakingTokenName: \"CAKE\",\n    stakingTokenAddress: \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\",\n    tokenName: \"CAKE\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://pancakeswap.finance/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 28,\n    sortOrder: 2,\n    stakingTokenName: \"LINK\",\n    stakingTokenAddress: \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\",\n    tokenName: \"LINK\",\n    contractAddress: {\n      56: MASTER_CHEF,\n    },\n    projectLink: \"https://chain.link/\",\n    poolCategory: PoolCategory.CORE,\n    tokenPerBlock: TOKEN_PER_BLOCK,\n    harvest: true,\n    isFinished: false,\n    tokenDecimals: 18,\n  }\n];\n\nexport default pools;\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n})}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== \"BNB\")\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === \"BNB\")\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from \"web3-utils\";\nimport poolsConfig from \"config/constants/pools\";\nimport masterChefABI from \"config/abi/masterchef.json\";\nimport erc20ABI from \"config/abi/erc20.json\";\nimport multicall from \"utils/multicall\";\nimport { getMasterChefAddress } from \"utils/addressHelpers\";\nimport { getWeb3 } from \"utils/web3\";\nimport BigNumber from \"bignumber.js\";\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== \"BNB\")\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === \"BNB\")\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: \"allowance\",\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: \"balanceOf\",\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: \"userInfo\",\n    params: [p.sousId, account],\n  }))\n\n  const userInfo = await multicall(masterChefABI, calls)\n\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo(\"0\", account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: \"pendingEgg\",\n    params: [p.sousId, account],\n  }))\n\n  const res = await multicall(masterChefABI, calls)\n\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingEgg(\"0\", account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsTotalStaking /* , fetchPoolsBlockLimits */ } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const totalStakings = await fetchPoolsTotalStaking();\n\n  const liveData = poolsConfig.map((pool) => {\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId);\n    return {...totalStaking};\n  })\n\n  /*\n    const blockLimits = await fetchPoolsBlockLimits()\n    const totalStakings = await fetchPoolsTotalStaking()\n\n    const liveData = poolsConfig.map((pool) => {\n      const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n      const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n\n      return {\n        ...blockLimit,\n        ...totalStaking,\n      }\n    })\n  */\n\n  dispatch(setPoolsPublicData(liveData));\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from \"./contracts\";\nimport { FarmConfig } from \"./types\";\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 1,\n    lpSymbol: \"BEAST-BNB LP\",\n    tokenSymbol: \"BEAST\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.beast,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x355443aB85fa4F564701ea22e364d1a34be4C152\"\n    },\n    risk: 5\n  },\n  {\n    pid: 2,\n    lpSymbol: \"BUSD-BNB LP\",\n    tokenSymbol: \"BUSD\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.busd,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\" // BNB-BUSD on PancakeSwap\n    },\n    risk: 5\n  },\n  {\n    pid: 3,\n    lpSymbol: \"CAKE-BNB LP\",\n    tokenSymbol: \"CAKE\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.pcs_cake,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\" // CAKE-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 5,\n    lpSymbol: \"ETH-BNB LP\",\n    tokenSymbol: \"ETH\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x74E4716E431f45807DCF19f284c7aA99F18a4fbc\" // ETH-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 6,\n    lpSymbol: \"BTCB-BNB LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.btcb,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\" // BTCB-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 7,\n    lpSymbol: \"LINK-BNB LP\",\n    tokenSymbol: \"LINK\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.link,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\" // LINK-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 8,\n    lpSymbol: \"USDT-BNB LP\",\n    tokenSymbol: \"USDT\",\n    quoteTokenSymbol: \"BNB\",\n    tokenAddresses: contracts.usdt,\n    quoteTokenAdresses: contracts.wbnb,\n    lpAddresses: {\n      56: \"0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE\" // USDT-BNB on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 9,\n    lpSymbol: \"USDT-BUSD LP\",\n    tokenSymbol: \"USDT\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.usdt,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x7EFaEf62fDdCCa950418312c6C91Aef321375A00\" // USDT-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 10,\n    lpSymbol: \"TUSD-BUSD LP\",\n    tokenSymbol: \"TUSD\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.tusd,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x2E28b9B74D6d99D4697e913b82B41ef1CAC51c6C\" // TUSD-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 11,\n    lpSymbol: \"USDC-BUSD LP\",\n    tokenSymbol: \"USDC\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.usdc,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1\" // USDC-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 12,\n    lpSymbol: \"BTCB-BUSD LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.btcb,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0xF45cd219aEF8618A92BAa7aD848364a158a24F33\" // BTCB-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 13,\n    lpSymbol: \"DAI-BUSD LP\",\n    tokenSymbol: \"DAI\",\n    quoteTokenSymbol: \"BUSD\",\n    tokenAddresses: contracts.dai,\n    quoteTokenAdresses: contracts.busd,\n    lpAddresses: {\n      56: \"0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489\" // DAI-BUSD on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 14,\n    lpSymbol: \"USDC-USDT LP\",\n    tokenSymbol: \"USDC\",\n    quoteTokenSymbol: \"USDT\",\n    tokenAddresses: contracts.usdc,\n    quoteTokenAdresses: contracts.usdt,\n    lpAddresses: {\n      56: \"0xEc6557348085Aa57C72514D67070dC863C0a5A8c\" // USDC-USDT on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 15,\n    lpSymbol: \"ETH-USDC LP\",\n    tokenSymbol: \"ETH\",\n    quoteTokenSymbol: \"USDC\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.usdc,\n    lpAddresses: {\n      56: \"0xEa26B78255Df2bBC31C1eBf60010D78670185bD0\" // ETH-USDC on PancakeSwap\n    },\n    risk: 3\n  },\n  {\n    pid: 17,\n    lpSymbol: \"BTCB-ETH LP\",\n    tokenSymbol: \"BTCB\",\n    quoteTokenSymbol: \"ETH\",\n    tokenAddresses: contracts.eth,\n    quoteTokenAdresses: contracts.btcb,\n    lpAddresses: {\n      56: \"0xD171B26E4484402de70e3Ea256bE5A2630d7e88D\" // BTCB-ETH on PancakeSwap\n    },\n    risk: 3\n  },\n]\n\nexport default farms\n","/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { createGlobalStyle } from \"styled-components\";\nimport { PancakeTheme } from \"@pancakeswap-libs/uikit\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: \"Kanit\", sans-serif;\n  }\n  body {\n    background-color: #0d0908;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={dark}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from \"@pancakeswap-libs/uikit\";\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Home\",\n    icon: \"HomeIcon\",\n    href: \"/\",\n  },\n  {\n    label: \"Trade BEAST\",\n    icon: \"TradeIcon\",\n    href: \"https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0xA711Ff9c444261132818CdCB06cE44Be5a600A29\",\n    openHrefInNewTab: true,\n  },\n  {\n    label: \"BEAST Farms\",\n    icon: \"FarmIcon\",\n    href: \"/farms\",\n  },\n  {\n    label: \"BEAST Pools\",\n    icon: \"PoolIcon\",\n    href: \"/pools\",\n  },\n  {\n    label: \"BEAST Referrals\",\n    icon: \"ReferralsIcon\",\n    href: \"/referrals\",\n  },\n  {\n    label: \"BEAST Products\",\n    icon: \"ProductsIcon\",\n    href: \"/products\",\n  },\n  {\n    label: \"Charts\",\n    icon: \"InfoIcon\",\n    items: [\n      {\n        label: \"PancakeSwap\",\n        href: \"https://pancakeswap.info/token/0xA711Ff9c444261132818CdCB06cE44Be5a600A29\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"PooCoin\",\n        href: \"https://poocoin.app/tokens/0xA711Ff9c444261132818CdCB06cE44Be5a600A29\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"Bogged\",\n        href: \"https://charts.bogged.finance/0xA711Ff9c444261132818CdCB06cE44Be5a600A29\",\n        openHrefInNewTab: true,\n      },\n      // {\n      //   label: \"DexGuru\",\n      //   href: \"https://dex.guru/token/0xA711Ff9c444261132818CdCB06cE44Be5a600A29-bsc\",\n      //   openHrefInNewTab: true,\n      // },\n    ],\n  },\n  {\n    label: \"Social Media\",\n    icon: \"AnnouncementsIcon\",\n    items: [\n      {\n        label: \"Telegram\",\n        href: \"https://example.com\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"Twitter\",\n        href: \"https://twitter.com/BeastModeToken/\",\n        openHrefInNewTab: true,\n      },\n    ],\n  },\n  {\n    label: \"Audits\",\n    icon: \"AuditsIcon\",\n    items: [\n      {\n        label: \"RugDoc (Coming Soon)\",\n        href: \"https://rugdoc.io/project/beastmode-finance/\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"CertiK (Coming Soon)\",\n        href: \"https://example.com/\",\n        openHrefInNewTab: true,\n      },\n      {\n        label: \"TechRate (Coming Soon)\",\n        href: \"https://example.com//\",\n        openHrefInNewTab: true,\n      },\n    ],\n  },\n  {\n    label: \"Gitbook Docs\",\n    icon: \"GitbookIcon\",\n    href: \"https://adah-mishra.gitbook.io/goose-test/\",\n    openHrefInNewTab: true,\n  },\n  // {\n  //   label: \"Medium Blog\",\n  //   icon: \"MediumIcon\",\n  //   href: \"https://goosefinance.medium.com/\",\n  //   openHrefInNewTab: true,\n  // },\n  // {\n  //   label: \"Trade\",\n  //   icon: \"TradeIcon\",\n  //   items: [\n  //     {\n  //       label: \"Exchange\",\n  //       href: \"https://exchange.goosedefi.com/\",\n  //     },\n  //     {\n  //       label: \"Liquidity\",\n  //       href: \"https://exchange.goosedefi.com/#/pool\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Pools\",\n  //   icon: \"PoolIcon\",\n  //   href: \"/pools\",\n  // },\n  // {\n  //   label: \"Lottery\",\n  //   icon: \"TicketIcon\",\n  //   href: \"/lottery\",\n  // },\n  // {\n  //   label: \"NFT\",\n  //   icon: \"NftIcon\",\n  //   href: \"/nft\",\n  // },\n  // {\n  //   label: \"More\",\n  //   icon: \"MoreIcon\",\n  //   items: [\n  //     {\n  //       label: \"Github\",\n  //       href: \"https://github.com/goosedefi/\",\n  //     },\n  //     {\n  //       label: \"Docs\",\n  //       href: \"https://goosedefi.gitbook.io/goose-finance/\",\n  //     },\n  //     {\n  //       label: \"Blog\",\n  //       href: \"https://goosefinance.medium.com/\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: \"Partnerships/IFO\",\n  //   icon: \"GooseIcon\",\n  //   href: \"https://docs.google.com/forms/d/e/1FAIpQLSe7ycrw8Dq4C5Vjc9WNlRtTxEhFDB1Ny6jlAByZ2Y6qBo7SKg/viewform?usp=sf_link\",\n  // },\n  // {\n  //   label: \"Audit by Hacken\",\n  //   icon: \"AuditIcon\",\n  //   href: \"https://www.goosedefi.com/files/hackenAudit.pdf\",\n  // },\n  // {\n  //   label: \"Audit by CertiK\",\n  //   icon: \"AuditIcon\",\n  //   href: \"https://certik.org/projects/goose-finance\",\n  // },\n];\n\nexport default config;\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://pancakeswap.info/token/0xA711Ff9c444261132818CdCB06cE44Be5a600A29\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Nft } from './types'\n\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n    previewImage: 'swapsies-preview.png',\n    blurImage: 'swapsies-blur.png',\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n    previewImage: 'drizzle-preview.png',\n    blurImage: 'drizzle-blur.png',\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n    previewImage: 'blueberries-preview.png',\n    blurImage: 'blueberries-blur.png',\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n    previewImage: 'circular-preview.png',\n    blurImage: 'circular-blur.png',\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n    previewImage: 'sparkle-preview.png',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import React, { useEffect, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\n\ninterface NftYouWonModalProps {\n  onDismiss?: () => void\n}\n\nconst ModalContent = styled.div`\n  padding: 24px;\n  text-align: center;\n`\n\nconst Actions = styled.div`\n  text-align: center;\n`\n\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <ModalContent>\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\n        <Heading size=\"lg\" color=\"secondary\">\n          {TranslateString(999, 'You won an NFT!')}\n        </Heading>\n      </ModalContent>\n      <Actions>\n        <Button as=\"a\" href=\"/nft\">\n          {TranslateString(999, 'Go to claim NFT')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\n/**\n * 1. Checks if nft supply available\n * 2. If supply is available check if the user can claim\n * 3. If the user can claim show a modal\n */\nconst NftGlobalNotification = () => {\n  const { account } = useWallet()\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\n  const showModal = useRef(() => onPresentBurnModal())\n\n  useEffect(() => {\n    const checkNftStatus = async () => {\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\n        rabbitmintingfarm,\n        [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ],\n      )\n\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n      const [canClaim]: [boolean] = canClaimArr\n      const [hasClaimed]: [boolean] = hasClaimedArr\n\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\n        showModal.current()\n      }\n    }\n\n    if (account && !document.location.href.includes('/nft')) {\n      checkNftStatus()\n    }\n  }, [account, showModal])\n\n  return <div />\n}\n\nexport default NftGlobalNotification\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, /* Redirect */ } from \"react-router-dom\";\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\";\nimport { ResetCSS } from \"@pancakeswap-libs/uikit\";\nimport BigNumber from \"bignumber.js\";\nimport { useFetchPublicData } from \"state/hooks\";\nimport GlobalStyle from \"./style/Global\";\nimport Menu from \"./components/Menu\";\nimport PageLoader from \"./components/PageLoader\";\nimport NftGlobalNotification from \"./views/Nft/components/NftGlobalNotification\";\n\n// Route-based code splitting\nconst Home = lazy(() => import(\"./views/Home\"));\nconst Farms = lazy(() => import(\"./views/Farms\"));\nconst Pools = lazy(() => import(\"./views/Pools\"));\nconst Referrals = lazy(() => import(\"./views/Referrals\"));\nconst Products = lazy(() => import(\"./views/Products\"));\nconst NotFound = lazy(() => import(\"./views/NotFound\"));\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n});\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet();\n\n  useEffect(() => {\n    if (!account && window.localStorage.getItem(\"accountStatus\")) {\n      connect(\"injected\");\n    }\n  }, [account, connect]);\n\n  useFetchPublicData();\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/referrals\">\n              <Referrals />\n            </Route>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <NftGlobalNotification />\n    </Router>\n  );\n};\n\nexport default React.memo(App);\n","import React, { createContext, ReactNode, useCallback, useState } from \"react\";\nimport { kebabCase } from \"lodash\";\nimport { Toast, toastTypes } from \"@pancakeswap-libs/uikit\";\nimport { ToastContextApi } from \"./types\";\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi[\"toasts\"]>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, \"id\">) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n\n  const clear = () => setToasts([])\n\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from \"contexts/ToastsContext\";\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ToastsProvider>\n        <ThemeContextProvider>\n          <LanguageContextProvider>\n            <bsc.UseWalletProvider\n              chainId={chainId}\n              connectors={{\n                walletconnect: { rpcUrl },\n                bsc,\n              }}\n            >\n              <BlockContextProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </BlockContextProvider>\n            </bsc.UseWalletProvider>\n          </LanguageContextProvider>\n        </ThemeContextProvider>\n      </ToastsProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}